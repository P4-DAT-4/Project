digraph AST {
    node [shape=box, style=filled, fillcolor=lightgrey];
    node0 [label="Program"];
    node1 [label="fn T x(arrow(T x))S"];
    node2 [label="Int"];
    node3 [label="test"];
    node4 [label="{arrow(T x = e); S}"];
    node5 [label="T x = e"];
    node6 [label="!e"];
    node7 [label="e1 AND e2"];
    node8 [label="!e"];
    node9 [label="b"];
    node10 [label="!e"];
    node11 [label="c"];
    node12 [label="a"];
    node13 [label="!e"];
    node14 [label="e1 AND e2"];
    node15 [label="!e"];
    node16 [label="b"];
    node17 [label="!e"];
    node18 [label="c"];
    node19 [label="S1;S2"];
    node20 [label="x = e"];
    node21 [label="a"];
    node22 [label="2"];
    node23 [label="S1;S2"];
    node24 [label="If e then S1 else S2"];
    node25 [label="a"];
    node26 [label="Skip"];
    node27 [label="Skip"];
    node28 [label="Return e"];
    node29 [label="2"];
    node30 [label="visualize x(arrow(e))E"];
    node31 [label="x(arrow(e))"];
    node32 [label="bubbleSort"];
    node33 [label="arr"];
    node34 [label="len"];
    node35 [label="e do x(arrow(e))"];
    node36 [label="bubbleSort"];
    node37 [label="x(arrow(e))"];
    node38 [label="manysquare"];
    node39 [label="arr"];
    node40 [label="len"];
    node0 -> node1;
    node1 -> node2;
    node1 -> node3;
    node1 -> node4;
    node4 -> node5;
    node5 -> node6;
    node7 -> node8;
    node8 -> node9;
    node7 -> node10;
    node10 -> node11;
    node6 -> node7;
    node5 -> node12;
    node5 -> node13;
    node14 -> node15;
    node15 -> node16;
    node14 -> node17;
    node17 -> node18;
    node13 -> node14;
    node4 -> node19;
    node19 -> node20;
    node20 -> node21;
    node20 -> node22;
    node19 -> node23;
    node23 -> node24;
    node24 -> node25;
    node24 -> node26;
    node24 -> node27;
    node23 -> node28;
    node28 -> node29;
    node0 -> node30;
    node30 -> node31;
    node31 -> node32;
    node31 -> node33;
    node31 -> node34;
    node30 -> node35;
    node35 -> node36;
    node35 -> node37;
    node37 -> node38;
    node37 -> node39;
    node37 -> node40;
}
